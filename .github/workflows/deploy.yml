name: Terraform Pipeline
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  scan:
    runs-on: ubuntu-local
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Baixando imagem do KICS
        run: docker pull checkmarx/kics:latest


      - name: Executando o KICS Scan
        run: docker run -v $(pwd):/path -i checkmarx/kics:latest scan -p "/path"
    continue-on-error: true

  validate:
    runs-on: ubuntu-local
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configurando o Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configurando AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Fmt
        run: terraform fmt -recursive

      - name: Terraform Validate
        run: terraform validate

  plan:
    needs: validate
    runs-on: ubuntu-local
    steps:
      - name: Configurando o Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configurando AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

  apply:
    needs: plan
    runs-on: ubuntu-local
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configurando AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Configurando o Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Apply
        run: terraform destroy -auto-approve

  output:
      needs: apply
      runs-on: ubuntu-local
      if: github.ref == 'refs/heads/main'
      steps:
        - name: Configurando AWS Credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
            
        - name: Configurando o Terraform
          uses: hashicorp/setup-terraform@v2
  
        - name: Terraform Init
          run: terraform init
          
        - name: Terraform Output
          run: terraform output module.cdn.cloudfront_domain_name
